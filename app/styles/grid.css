.project-grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 1rem;
  padding: 2rem;
}

.project-item {
  position: relative;
  grid-column: span var(--cols);
  grid-row: span var(--rows);
  min-height: 250px;
  overflow: hidden;
  aspect-ratio: var(--aspect-ratio, 1);
  height: auto;
}

/* Masonry container for scroll preservation */
.masonry-container {
  width: 100%;
  overflow: hidden; /* Hide scrollbars but maintain overflow behavior */
  position: relative;
  min-height: 50vh; /* Set a minimum height to reduce layout shifts */
}

/* Masonry styles */
.project-masonry {
  display: flex;
  width: 100%;
  gap: 1rem;
  margin-left: -1rem; /* Compensate for padding in columns */
  transition: opacity 0.15s ease; /* Smooth transition when filtering */
}

/* Add this for fade transitions when filtering */
.project-masonry.filtering {
  opacity: 0.8;
}

.project-masonry-column {
  padding-left: 1rem; /* Equal to the gap size */
  background-clip: padding-box;
}

.project-masonry-item {
  margin-bottom: 1rem;
  position: relative;
  overflow: hidden;
  min-height: 250px;
  display: block;
  width: 100%;
}

/* Image containers */
.project-item-inner {
  width: 100%;
  height: 0;
  position: relative;
  overflow: hidden;
}

/* Make sure absolute positioned elements take up the full space */
.project-item-inner > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Item overlay styling */
.item-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 1.5rem;
  color: white;
  z-index: 10;
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
}

.group:hover .item-overlay {
  opacity: 1;
  transform: translateY(0);
}

.item-overlay h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.item-overlay p {
  font-size: 0.875rem;
  margin-bottom: 0.75rem;
  line-height: 1.4;
}

@media (max-width: 1024px) {
  .project-grid {
    grid-template-columns: repeat(8, 1fr);
  }
}

@media (max-width: 768px) {
  .project-grid {
    grid-template-columns: repeat(4, 1fr);
  }
  
  .project-item {
    grid-column: span 4 !important;
  }
}

/* Add styles for the skeleton UI */
@keyframes pulse {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
}

.animate-pulse {
  animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Improve rendering performance with will-change */
.project-masonry-item {
  will-change: transform, opacity;
}

/* Add content-visibility for scrolling performance */
.project-masonry-column > * {
  content-visibility: auto;
  contain-intrinsic-size: 0 300px;
}

/* Progressive loading transition */
.filtering .project-masonry-item {
  transition: opacity 0.3s ease-out, transform 0.3s ease-out;
}

/* Project grid item transition optimizations */
.project-item-inner > * {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
}

/* Optimize animations to use GPU acceleration */
.project-masonry {
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  perspective: 1000px;
  -webkit-perspective: 1000px;
}

/* Optimize iframes loading */
iframe {
  loading: lazy;
}

/* Prioritize paint performance */
.project-masonry-item .item-overlay {
  will-change: opacity;
}
